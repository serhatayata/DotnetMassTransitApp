Request/response is a commonly used message pattern where one service sends a request to another service, continuing after 
the response is received. In a distributed system, this can increase the latency of an application since the service may 
be hosted in another process, on another machine, or may even be a remote service in another network. While in many cases it 
is best to avoid request/response use in distributed applications, particularly when the request is a command, it is 
often necessary and preferred over more complex solutions.

In MassTransit, developers use a request client to send or publish requests and wait for a response. The request client 
is asynchronous, and supports use of the await keyword since it returns a Task.

//////// Client Configuration

A request client can be resolved using dependency injection for any valid message type, no configuration is required. By 
default, request messages are published and should be consumed by only one consumer/receive endpoint connected to the 
message broker. Multiple consumers connected to the same receive endpoint are fine, requests will be load balanced across 
the connected consumers.

To configure the request client for a message type, add the request client to the configuration explicitly.

//////// Request Headers

To create a request and add a header to the SendContext, one option is to add an execute filter to the request pipeline.


//////// Request Handle

Client factories or the request client can also be used to create a request instead of calling GetResponse. This is an 
uncommon scenario, but is available as an option and may make sense depending on the situation. If a request is created 
(which returns a RequestHandle<T>), the request handle must be disposed after the request completes.

//////// Request Client Factory

The request client is composed of two parts, a client factory and a request client. There are two client factories, the 
scoped client factory, and the bus client factory.

//////// IScopedClientFactory

Using IRequestClient requires a container scope, and the request client for a request message type is resolved from 
container scope using a scoped client factory. As an alternative to specifying IRequestClient<T> as a constructor 
dependency, the scoped client factory can be used instead of create a request client directly. This can be useful when 
the destination address may change based on context, such as a TenantId.

